Урок 2
======

Содержание
----------

#. Преобразование типов данных
#. Подробнее о функции print
#. Типы данных
#. Переменные

Преобразование типов данных
"""""""""""""""""""""""""""

Чтобы преобразовать число в строку, можно воспользоваться ``str(<значение>)``.
Пример:

::
    
    a = str(234)
    print(a)
    print(type(a))

Вывод:

234

<class 'str'>

Преобразовать можно не только int в str, также можно преобразовывать с помощью методов ``float(<значение>)``, ``int(<значение>)``, ``str(<значение>)``.

.. important::

    Будьте осторожны при преобразовании типа ``str`` в ``int`` или ``float``. Если попытаться преобразовать строку "demo" в тип ``float``, то появится ошибка.
    Интепретатор пытается найти в "demo" что-то похожее на 1, или 1.5, и не найдя генерирует ошибку.

Подробнее о функции print
"""""""""""""""""""""""""

Функция ``print`` позволяет выводить данные в консоль, а также она имеет дополнительные параметры. Вот формат функции ``print``: ``print([<объект1>, <объектN>], [sep=" "], [end="\n"])``

Сначала через запятую указываются объекты или переменные, которые нужно вывести (234, 12.02, "string" - это объекты)

::

    a = "string"
    print("string", a)

Вывод:

string string

Обратите внимание, что между объектами автоматически вставляется пробел. Чтобы изменить значение, выводяющаеся между объетками нужно изменить параметр ``sep``.

.. note::

    В Python есть обязательные и необязательные параметры. Чтобы указать обязательный параметр, достаточно написать просто значение. При указании необязательного параметра, следует воспользоваться следующим синтаксисом: ``<имя параметра>=<значение>``

Пример: 

::

    print("H", "I", sep="O")

Вывод:

HOI

Необязательный параметр ``end`` задаёт значение, которое будет выводиться после объектов. По умолчанию значение, которое он выводит это символ перевода строки "\\n"